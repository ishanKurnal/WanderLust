âœ¦Here is a comprehensive list of the technologies used in your "WanderLust" project, including the ones you've mentioned and others I've identified from the codebase:

  Core Backend Technologies

   * [Node.js](https://nodejs.org/docs): The JavaScript runtime environment that allows you to run the application on the server.
   * [Express.js](https://expressjs.com/): A fast and minimalist web framework for Node.js, used to build the web server and handle routing.
   * [npm (Node Package Manager)](https://docs.npmjs.com/): Used for managing the project's dependencies and running scripts.

  Database

   * [MongoDB](https://www.mongodb.com/docs/): A NoSQL, document-oriented database used to store all the application data (listings, users, reviews).
   * [MongoDB Atlas](https://www.mongodb.com/docs/atlas/): The cloud hosting service for the MongoDB database.
   * [Mongoose](https://mongoosejs.com/): An Object Data Modeling (ODM) library for MongoDB and Node.js. It provides a schema-based solution to model your application data and simplifies interactions with the database.

  Authentication & Authorization

   * [Passport.js](https://www.passportjs.org/): A flexible and modular authentication middleware for Node.js.
   * [passport-local](https://www.npmjs.com/package/passport-local): A Passport strategy for authenticating with a username and password.
   * [passport-local-mongoose](https://www.npmjs.com/package/passport-local-mongoose): A Mongoose plugin that simplifies building username and password login with Passport.
   * [express-session](https://www.npmjs.com/package/express-session): Middleware for managing user sessions.
   * [connect-mongo](https://www.npmjs.com/package/connect-mongo): A MongoDB session store for express-session, which allows you to store session data in your MongoDB database.

  View Engine & Frontend

   * [EJS (Embedded JavaScript)](https://ejs.co/): A simple templating language that lets you generate HTML markup with plain JavaScript.
   * [ejs-mate](https://www.npmjs.com/package/ejs-mate): A layout and partials helper for EJS, which helps in creating reusable templates.
   * [HTML5](https://developer.mozilla.org/en-US/docs/Web/HTML), [CSS3](https://developer.mozilla.org/en-US/docs/Web/CSS), [JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript): The standard technologies for building the user interface.
   * [Bootstrap](https://getbootstrap.com/docs/): A popular CSS framework for building responsive and mobile-first websites.

  APIs & External Services

   * [Cloudinary](https://cloudinary.com/documentation): A cloud-based service for image and video management, used here for uploading and storing listing images.
   * [Mapbox](https://docs.mapbox.com/): A mapping and location platform used to display maps and for geocoding addresses into geographic coordinates.

  Deployment

   * [Render](https://render.com/docs): For hosting and deploying the application.

  Validation & Data Handling

   * [Joi](https://joi.dev/): A powerful schema description language and data validator for JavaScript, used to validate the data submitted in forms.
   * [Multer](https://www.npmjs.com/package/multer): A Node.js middleware for handling multipart/form-data, which is primarily used for uploading files.
   * [multer-storage-cloudinary](https://www.npmjs.com/package/multer-storage-cloudinary): A storage engine for Multer that allows you to upload files directly to Cloudinary.

  Other Middleware & Utilities

   * [method-override](https://www.npmjs.com/package/method-override): Middleware that lets you use HTTP verbs such as PUT or DELETE in places where the client doesn't support it (like in HTML forms).
   * [connect-flash](https://github.com/jaredhanson/connect-flash): Middleware for flashing messages, which is used to display success or error messages to the user after certain actions (e.g., after creating a listing or logging in).
   * [dotenv](https://dotenv.org/docs): A zero-dependency module that loads environment variables from a .env file into process.env.

  I hope this detailed list is helpful for your understanding of the project's technology stack.